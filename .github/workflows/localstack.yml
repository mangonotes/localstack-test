name: Regression Tests (NodeJS)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      upstream-version:
        description: Upstream aws-cdk version to use in tests
        required: false
env:
  AWS_ACCESS_KEY_ID: test
  AWS_SECRET_ACCESS_KEY: test

jobs:
  integration-nodejs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { language: javascript, node-version: '20.x', region: us-east-1}
          

    env:
      AWS_REGION: ${{ matrix.region }}
      AWS_DEFAULT_REGION: ${{ matrix.region }}

    steps:
      - uses: actions/checkout@v2
       
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies for aws-cdk-local
       
        run: |
          npm install
          npm install -g aws-cdk aws-cdk-local
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - name: Install specific aws-cdk version
        
        if: inputs.upstream-version
        run: npm install aws-cdk@${{ inputs.upstream-version }}

      - name: Verify specific aws-cdk version is used by cdklocal
        if: inputs.upstream-version
        run: |
          [[ $(cdklocal --version) =~ ^${{ inputs.upstream-version }}.* ]] || exit 1

      - name: Install localstack CLI
        run: pip install localstack

            
      - name: Start and wait for localstack (Community)
        timeout-minutes: 10
        run: |
          docker pull localstack/localstack:latest
          localstack start -d
          localstack wait -t 30

      - name: Run bootstrap
        timeout-minutes: 1
        run: cdklocal bootstrap

      - name: Deploy
        timeout-minutes: 1
        run: cdklocal deploy --all --require-approval=never

      - name: Verify successful deployment
        run: |
         awslocal  s3 ls
